package guiltlist;

import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.io.Serializable;
import java.util.LinkedList;
import java.util.Scanner;

public class GuiltList implements Serializable {

//////ATTRIBUTES//////
  private static LinkedList<User> users = new LinkedList<User>();

public static User searchUsers(String email) {
    for(int i=0; i < users.size(); i++) {
        if(email.equals(users.get(i).getEmail())) return users.get(i);
    }
    return null;
}

public static void addUsers(String name, String email, String password) {
                users.add(new User(name, email, password));
                writeFile();
    }

public static void writeFile(){
 PrintWriter output = null ;
    try {	
	output = new PrintWriter("users.txt"); 
	// creates a file if it does not exist; 
	//discards the current content if the file exists

	for(int i=0; i < users.size(); i++) {
        output.print(users.get(i).getName()+","+users.get(i).getPassword()+","+users.get(i).getEmail()+"\n");
    }
	output.flush();	
     }
     catch(IOException ioe) {
               System.out.println(ioe.toString());
      } 
      finally {    if (output != null)      output.close();     }
}

public static String print(){
   String p ="";
   for(int i=0; i<users.size(); i++){
    p += users.get(i).toString()+"\n";
    }
   return p;
}
public static boolean getUsers() {
                  if(users.size() !=0){return true;}
                else{return false;}
    }
public static void setUsers(LinkedList<User> u) {
                  users = u;
    }
public static LinkedList<User> getUserList() {
                  return users;
    }
public static void main(String[] args) {
            GuiltList gs = new GuiltList();

            
            try {
            FileInputStream fos = new FileInputStream("gl.dat");
            ObjectInputStream oos = new ObjectInputStream(fos);
            
            
            LinkedList<User> users = (LinkedList<User>)(oos.readObject());
            int iId = (Integer)(oos.readObject());
            int tId = (Integer)(oos.readObject());
            int stId = (Integer)(oos.readObject());
            
            GuiltList.setUsers(users);
            Items.setNextId(iId);
            Task.setTaskID(tId);
            SubTask.setSubTaskID(stId);
            
            oos.close();
        } catch(Exception ioe) {
            System.out.println(ioe.toString());
        }
            
            LoginGUI g = new LoginGUI();
            g.setVisible(true);
        }
           
}
